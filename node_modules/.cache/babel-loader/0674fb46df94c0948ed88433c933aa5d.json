{"ast":null,"code":"var _jsxFileName = \"/home/daniofilho/Trabalho/Github/tiles-playground/src/pages/Isometric/index.tsx\";\nimport React, { useState, useMemo } from \"react\";\nimport IsometricTile from \"components/IsometricTile\";\nimport { Container } from \"./styles\";\n\nconst Isometric = () => {\n  const [tiles, setTiles] = useState({\n    onX: 10,\n    onY: 5\n  });\n  const quantity = useMemo(() => {\n    return tiles.onX * tiles.onY;\n  }, [tiles.onX, tiles.onY]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, new Array(quantity).fill(\"\").map((_, x) => {\n    return /*#__PURE__*/React.createElement(IsometricTile, {\n      key: x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    });\n  }), /*#__PURE__*/React.createElement(IsometricTile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Isometric;","map":{"version":3,"sources":["/home/daniofilho/Trabalho/Github/tiles-playground/src/pages/Isometric/index.tsx"],"names":["React","useState","useMemo","IsometricTile","Container","Isometric","tiles","setTiles","onX","onY","quantity","Array","fill","map","_","x"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AAEA,OAAOC,aAAP,MAA0B,0BAA1B;AAIA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAY;AAC5CO,IAAAA,GAAG,EAAE,EADuC;AAE5CC,IAAAA,GAAG,EAAE;AAFuC,GAAZ,CAAlC;AAKA,QAAMC,QAAQ,GAAGR,OAAO,CAAC,MAAc;AACrC,WAAOI,KAAK,CAACE,GAAN,GAAYF,KAAK,CAACG,GAAzB;AACD,GAFuB,EAErB,CAACH,KAAK,CAACE,GAAP,EAAYF,KAAK,CAACG,GAAlB,CAFqB,CAAxB;AAIA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAIE,KAAJ,CAAUD,QAAV,EAAoBE,IAApB,CAAyB,EAAzB,EAA6BC,GAA7B,CAAiC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1C,wBAAO,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,eAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAlBD;;AAoBA,eAAeV,SAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\n\nimport IsometricTile from \"components/IsometricTile\";\n\nimport { tilesType } from \"./types\";\n\nimport { Container } from \"./styles\";\n\nconst Isometric: React.FC = () => {\n  const [tiles, setTiles] = useState<tilesType>({\n    onX: 10,\n    onY: 5,\n  });\n\n  const quantity = useMemo((): number => {\n    return tiles.onX * tiles.onY;\n  }, [tiles.onX, tiles.onY]);\n\n  return (\n    <Container>\n      {new Array(quantity).fill(\"\").map((_, x) => {\n        return <IsometricTile key={x} />;\n      })}\n      <IsometricTile />\n    </Container>\n  );\n};\n\nexport default Isometric;\n"]},"metadata":{},"sourceType":"module"}