{"ast":null,"code":"var _jsxFileName = \"/home/daniofilho/Trabalho/Github/tiles-playground/src/pages/Isometric/index.tsx\";\nimport React, { useState, useMemo } from \"react\";\nimport IsometricTile from \"components/IsometricTile\";\nimport { Container } from \"./styles\";\n\nconst Isometric = () => {\n  const tiles = useState({\n    onX: 10,\n    onY: 5\n  });\n  const quantity = useMemo(() => {\n    return tiles.onX * tiles.onY;\n  }, [tiles.onX, tiles.onY]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, new Array(tiles.onX * tiles), /*#__PURE__*/React.createElement(IsometricTile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Isometric;","map":{"version":3,"sources":["/home/daniofilho/Trabalho/Github/tiles-playground/src/pages/Isometric/index.tsx"],"names":["React","useState","useMemo","IsometricTile","Container","Isometric","tiles","onX","onY","quantity","Array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AAEA,OAAOC,aAAP,MAA0B,0BAA1B;AAEA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAMC,KAAK,GAAGL,QAAQ,CAAC;AACrBM,IAAAA,GAAG,EAAE,EADgB;AAErBC,IAAAA,GAAG,EAAE;AAFgB,GAAD,CAAtB;AAKA,QAAMC,QAAQ,GAAGP,OAAO,CAAC,MAAY;AACnC,WAAOI,KAAK,CAACC,GAAN,GAAYD,KAAK,CAACE,GAAzB;AACD,GAFuB,EAErB,CAACF,KAAK,CAACC,GAAP,EAAYD,KAAK,CAACE,GAAlB,CAFqB,CAAxB;AAIA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAIE,KAAJ,CAAUJ,KAAK,CAACC,GAAN,GAAYD,KAAtB,CADH,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAhBD;;AAkBA,eAAeD,SAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\n\nimport IsometricTile from \"components/IsometricTile\";\n\nimport { Container } from \"./styles\";\n\nconst Isometric: React.FC = () => {\n  const tiles = useState({\n    onX: 10,\n    onY: 5,\n  });\n\n  const quantity = useMemo((): void => {\n    return tiles.onX * tiles.onY;\n  }, [tiles.onX, tiles.onY]);\n\n  return (\n    <Container>\n      {new Array(tiles.onX * tiles)}\n      <IsometricTile />\n    </Container>\n  );\n};\n\nexport default Isometric;\n"]},"metadata":{},"sourceType":"module"}