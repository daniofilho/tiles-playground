{"ast":null,"code":"import styled from \"styled-components\";\nimport tile from \"./tile.png\";\nexport const Container = styled.div.attrs(props => ({\n  style: {\n    width: props.size.width,\n    height: props.size.height,\n    marginLeft: props.x,\n    marginTop: props.y\n  }\n}))`\n  position: absolute;\n  background-image: url(${tile});\n  background-size: cover;\n  background-repeat: no-repeat;\n  image-rendering: pixelated;\n\n  filter: drop-shadow(-1px 6px 3px rgba(50, 50, 0, 0.5));\n`;\nexport const Tile = styled.div.attrs(props => ({}))`\n  transition: 1s;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n\n  /* Shape of tile */\n  clip-path: polygon(50% 0, 100% 39%, 100% 60%, 50% 100%, 0 61%, 1% 36%);\n\n  &:hover {\n    margin-top: ${({\n  y,\n  tall\n}) => y - tall * 2}px !important;\n  }\n`;","map":{"version":3,"sources":["/home/daniofilho/Trabalho/Github/tiles-playground/src/components/IsometricTile/styles.ts"],"names":["styled","tile","Container","div","attrs","props","style","width","size","height","marginLeft","x","marginTop","y","Tile","tall"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAO,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAP,CAAWC,KAAX,CAAkBC,KAAD,KAA4B;AACpEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEF,KAAK,CAACG,IAAN,CAAWD,KADb;AAELE,IAAAA,MAAM,EAAEJ,KAAK,CAACG,IAAN,CAAWC,MAFd;AAGLC,IAAAA,UAAU,EAAEL,KAAK,CAACM,CAHb;AAILC,IAAAA,SAAS,EAAEP,KAAK,CAACQ;AAJZ;AAD6D,CAA5B,CAAjB,CAOL;;0BAEMZ,IAAK;;;;;;CATxB;AAiBP,OAAO,MAAMa,IAAI,GAAGd,MAAM,CAACG,GAAP,CAAWC,KAAX,CAAkBC,KAAD,KAA4B,EAA5B,CAAjB,CAElB;;;;;;;;;;;;;;kBAcgB,CAAC;AAAEQ,EAAAA,CAAF;AAAKE,EAAAA;AAAL,CAAD,KAAiBF,CAAC,GAAGE,IAAI,GAAG,CAAE;;CAhBzC","sourcesContent":["import styled from \"styled-components\";\n\nimport tile from \"./tile.png\";\n\nexport const Container = styled.div.attrs((props: IIsometricTile) => ({\n  style: {\n    width: props.size.width,\n    height: props.size.height,\n    marginLeft: props.x,\n    marginTop: props.y,\n  },\n}))<IIsometricTile>`\n  position: absolute;\n  background-image: url(${tile});\n  background-size: cover;\n  background-repeat: no-repeat;\n  image-rendering: pixelated;\n\n  filter: drop-shadow(-1px 6px 3px rgba(50, 50, 0, 0.5));\n`;\n\nexport const Tile = styled.div.attrs((props: IIsometricTile) => ({}))<\n  IIsometricTile\n>`\n  transition: 1s;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n\n  /* Shape of tile */\n  clip-path: polygon(50% 0, 100% 39%, 100% 60%, 50% 100%, 0 61%, 1% 36%);\n\n  &:hover {\n    margin-top: ${({ y, tall }) => y - tall * 2}px !important;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}