{"ast":null,"code":"import styled, { keyframes } from \"styled-components\";\nimport tile from \"./tile.png\";\n\nconst levitate = (y, tall) => keyframes`\n  0% {\n    margin-top: -${tall * 2.4}px !important;\n     \n  }\n  100% {\n    margin-top: -${tall * 2.2}px !important;\n     \n  }\n`;\n\nexport const Tile = styled.div.attrs(props => ({\n  style: {\n    width: props.size.width,\n    height: props.size.height,\n    marginLeft: props.x,\n    marginTop: props.y\n  }\n}))`\n  position: absolute;\n  transition: 1s;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  animation: ${({\n  y,\n  tall\n}) => levitate(y, tall)} 1s ease-in-out infinite;\n\n  /* Shape of tile */\n  clip-path: polygon(\n    45% 0,\n    55% 0,\n    100% 36%,\n    100% 64%,\n    56% 100%,\n    45% 100%,\n    0 63%,\n    0 36%\n  );\n\n  &:before {\n    content: \" \";\n    width: ${({\n  size\n}) => size.width}px;\n    height: ${({\n  size\n}) => size.height}px;\n    background-image: url(${tile});\n    background-size: cover;\n    background-repeat: no-repeat;\n\n    -ms-interpolation-mode: nearest-neighbor;\n    image-rendering: pixelated;\n  }\n\n  &:hover {\n    margin-top: ${({\n  y,\n  tall\n}) => y - tall * 2.4}px !important;\n\n    &:before {\n      filter: brightness(110%);\n    }\n  }\n`;","map":{"version":3,"sources":["/home/daniofilho/Trabalho/Github/tiles-playground/src/components/IsometricTile/styles.ts"],"names":["styled","keyframes","tile","levitate","y","tall","Tile","div","attrs","props","style","width","size","height","marginLeft","x","marginTop"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,CAAD,EAAYC,IAAZ,KAA6BJ,SAAU;;mBAErCI,IAAI,GAAG,GAAI;;;;mBAIXA,IAAI,GAAG,GAAI;;;CAN9B;;AAWA,OAAO,MAAMC,IAAI,GAAGN,MAAM,CAACO,GAAP,CAAWC,KAAX,CAAkBC,KAAD,KAA4B;AAC/DC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEF,KAAK,CAACG,IAAN,CAAWD,KADb;AAELE,IAAAA,MAAM,EAAEJ,KAAK,CAACG,IAAN,CAAWC,MAFd;AAGLC,IAAAA,UAAU,EAAEL,KAAK,CAACM,CAHb;AAILC,IAAAA,SAAS,EAAEP,KAAK,CAACL;AAJZ;AADwD,CAA5B,CAAjB,CAOA;;;;;;;;;;eAUL,CAAC;AAAEA,EAAAA,CAAF;AAAKC,EAAAA;AAAL,CAAD,KAAiBF,QAAQ,CAACC,CAAD,EAAIC,IAAJ,CAAU;;;;;;;;;;;;;;;;aAgBrC,CAAC;AAAEO,EAAAA;AAAF,CAAD,KAAcA,IAAI,CAACD,KAAM;cACxB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcA,IAAI,CAACC,MAAO;4BACZX,IAAK;;;;;;;;;kBASf,CAAC;AAAEE,EAAAA,CAAF;AAAKC,EAAAA;AAAL,CAAD,KAAiBD,CAAC,GAAGC,IAAI,GAAG,GAAI;;;;;;CA5C3C","sourcesContent":["import styled, { keyframes } from \"styled-components\";\n\nimport tile from \"./tile.png\";\n\nconst levitate = (y: number, tall: number) => keyframes`\n  0% {\n    margin-top: -${tall * 2.4}px !important;\n     \n  }\n  100% {\n    margin-top: -${tall * 2.2}px !important;\n     \n  }\n`;\n\nexport const Tile = styled.div.attrs((props: IIsometricTile) => ({\n  style: {\n    width: props.size.width,\n    height: props.size.height,\n    marginLeft: props.x,\n    marginTop: props.y,\n  },\n}))<IIsometricTile>`\n  position: absolute;\n  transition: 1s;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  animation: ${({ y, tall }) => levitate(y, tall)} 1s ease-in-out infinite;\n\n  /* Shape of tile */\n  clip-path: polygon(\n    45% 0,\n    55% 0,\n    100% 36%,\n    100% 64%,\n    56% 100%,\n    45% 100%,\n    0 63%,\n    0 36%\n  );\n\n  &:before {\n    content: \" \";\n    width: ${({ size }) => size.width}px;\n    height: ${({ size }) => size.height}px;\n    background-image: url(${tile});\n    background-size: cover;\n    background-repeat: no-repeat;\n\n    -ms-interpolation-mode: nearest-neighbor;\n    image-rendering: pixelated;\n  }\n\n  &:hover {\n    margin-top: ${({ y, tall }) => y - tall * 2.4}px !important;\n\n    &:before {\n      filter: brightness(110%);\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}